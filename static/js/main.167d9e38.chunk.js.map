{"version":3,"sources":["components/card.js","components/header.js","components/footer.js","App.js","index.js"],"names":["Card","props","className","onClick","matched","notifyGameOver","notifyPickedNonmatch","cardId","alt","src","imgRef","onLoad","notifyImgLoaded","skinName","Header","id","currentScore","highScore","Footer","href","target","rel","App","useState","shownCards","setShownCards","cards","setCards","isLoaded","setLoaded","loadedImages","setLoadedImages","setCurrentScore","maxScore","setMaxScore","names","links","startNewGame","createNewDeck","incrementMatchedCards","length","alert","newCards","randomize","i","push","randomizeCard","randomInt","Math","floor","random","alreadyMatched","card1","includes","card2","card3","incrementImageCount","useEffect","style","display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.167d9e38.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card(props) {\n    function checkMatched() {\n        if(!props.matched) {\n            props.notifyPickedNonmatch(props.cardId);\n        }\n        else {\n            props.notifyGameOver();\n        }\n    }\n\n    return (\n        <div className='card' onClick={checkMatched} >\n            <img alt=\"A randomized Lux skin\" src={props.imgRef} onLoad={props.notifyImgLoaded}></img>\n            <p>{props.skinName}</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\n\nfunction Header(props) {\n    return (\n        <div id=\"header\">\n            <h1>Lux Memory Card Game</h1>\n            <h2>Try to click on all skins exactly once!</h2>\n            <div id=\"scoreboard\"><p>Current: {props.currentScore}</p><p>High: {props.highScore}</p></div>\n        </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Footer(props) {\n    return (\n        <div id=\"footer\">\n            <a href='https://github.com/anthony-argel' target=\"_blank\" rel='noreferrer noopener'>My Github</a>\n        </div>\n    )\n}\n\nexport default Footer;","import './styles/App.css';\nimport './styles/reset.css';\nimport Card from './components/card'\nimport Header from './components/header'\nimport Footer from './components/footer'\nimport React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [shownCards, setShownCards] = useState([0,1,2]);\n  const [cards, setCards] = useState([]);\n  const [isLoaded, setLoaded] = useState(false);\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [maxScore, setMaxScore] = useState(0);\n\n\n  const names = \n      [\n      'Classic',\n      'Sorcereress',\n      'Spellthief',\n      'Commando',\n      'Imperial',\n      'Steel Legion',\n      'Star Guardian',\n      'Elementalist',\n      'Lunar Empress',\n      'Pajama Guardian',\n      'Battle Academia',\n      'Dark Cosmic',\n      'Cosmic'\n  ];\n\n  const links =\n  [\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_0.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_1.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_2.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_3.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_4.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_5.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_6.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_7.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_8.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_14.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_15.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_17.jpg',\n    'https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Lux_18.jpg'\n    \n  ];\n\n  useEffect(() => {\n    createNewDeck();\n  }, [])\n\n  function startNewGame() {\n    setCurrentScore(0);\n    if(isLoaded) {\n      createNewDeck();\n    }\n  }\n\n  function incrementMatchedCards(cardId) {\n    setCurrentScore(currentScore + 1);\n    if(currentScore + 1 === links.length) {\n      alert('you win!')\n      startNewGame();\n    }\n    else {\n      let newCards = cards;\n      newCards[cardId].matched = true;\n      setCards(newCards);\n      randomize();\n    }\n  }\n\n  function createNewDeck() {\n    let newCards = [];\n    for(let i = 0; i < names.length;i++) {\n      newCards.push({imgRef:links[i], randomizeCard: randomize, skinName: names[i], matched: false, cardId: i })\n    }\n    setCards(newCards);\n  }\n\n  useEffect(() => {\n    randomize();\n  }, [cards])\n\n  function randomInt() {\n    return Math.floor(Math.random() * links.length);\n  }\n\n  function randomize() {\n    if(cards.length === 0 || currentScore == links.length){\n      return;\n    } \n    let alreadyMatched = 0;\n    let card1 = randomInt();\n    while (shownCards.includes(card1)) {\n      card1 = randomInt();\n    }\n    if (cards[card1].matched === true) \n      alreadyMatched++;\n    let card2 = randomInt();\n    while (card2 === card1 || shownCards.includes(card2)) {\n      card2 = randomInt();\n    }\n    if (cards[card2].matched === true) \n      alreadyMatched++;\n    let card3 = randomInt();\n    while(card3 === card1 || card3 === card2 || shownCards.includes(card3) || (alreadyMatched === 2 && cards[card3].matched)) {\n      card3 = randomInt();\n    }\n    setShownCards([card1, card2, card3]);\n  }\n\n  useEffect(() => {\n    setLoaded(false);\n    setLoadedImages(0);\n  }, [shownCards])\n\n  function incrementImageCount() {\n    setLoadedImages(loadedImages + 1);\n  };\n\n  useEffect(() => {\n    if(loadedImages === 3) {\n      setLoaded(true);\n    }\n  }, [loadedImages])\n\n  useEffect(() => {\n    if(currentScore > maxScore) {\n      setMaxScore(currentScore);\n    }\n  }, [currentScore])\n\n  return (\n    <div className=\"App\">\n      <Header currentScore={currentScore} highScore={maxScore}/>\n      <div id=\"shown-cards\" style={{display: isLoaded ? \"flex\" : \"none\"}}>\n      <Card  {...cards[shownCards[0]]} notifyImgLoaded={incrementImageCount} notifyPickedNonmatch={incrementMatchedCards} notifyGameOver={startNewGame}/>\n      <Card  {...cards[shownCards[1]]} notifyImgLoaded={incrementImageCount} notifyPickedNonmatch={incrementMatchedCards} notifyGameOver={startNewGame}/>\n      <Card  {...cards[shownCards[2]]} notifyImgLoaded={incrementImageCount} notifyPickedNonmatch={incrementMatchedCards} notifyGameOver={startNewGame}/>\n      </div>\n      <div id=\"load-notification\" style={{display: (!isLoaded) ? \"flex\" : \"none\"}}>Loading...</div>\n      <Footer />\n    </div>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}